:allow-uri-read:
:author: Charles Moulliard
:backend: revealjs
:blog: http://cmoulliard.github.io
:data-uri!:
:demo-git: https://github.com/cmoulliard/devnation-2014-demos
:fa-ellipsis: #&nbsp;#[fa fa-ellipsis-h]#&nbsp;#
//:footer_copyright: Powered by http://asciidoctor.org[Asciidoctor], RevealJS and Hyla
:footer_copyright: Powered by Asciidoctor, Hyla & RevealJS
:icons: font
:idprefix:
:imagesdir: images/
:linkattrs:
:linkcss:
:project_dir: /Users/chmoulli/MyProjects/conferences/fuse-days-paris-2014
:resourcesdir: /Users/chmoulli/MyProjects/conferences/fuse-days-paris-2014/snippet/src/main/resources
// Themes : default, beige, moon, blood, night, serif, simple, sky, solarized
:revealjs_theme: conference
:revealjs_vertical_alignment: false
:revealjs_history: false
:sourcesdir: /Users/chmoulli/MyProjects/conferences/devnation-2014-slideshow/snippet/src/main/java/
:source-highlighter: highlightjs
//:source-highlighter: coderay, highlightjs, pygments
:stylesdir: /Users/chmoulli/RedHat/GPE/content/hyla/resources/styles
:title-author: {title} {author}
:title-speaker: Architect Engineer Committer
:twitter: cmoulliard

== *Drools JBPM on Fuse*

Fuse Integration Days / 13th of May - 2014

[.newline]
http://twitter.com/{twitter}[{author}] +
Architect, Engineer & Committer

// *********************************
== Speaker

* Agricultural Engineer & Zoologist
** 19 years of experience in IT world development
** Project manager in Bank, Financial, Telco world
* Specialized in new technologies Web & Integration
* **Architect/Engineer** @Red Hat

[.newline]
* **Committer** : Apache ServiceMix, Karaf (PMC), Camel (PMC), Fabric8, Drools, Hawtio, Asciidoctor

image::camel/my-camel.jpg[180,180,float="right"]

// *********************************
== Speaker - con't

[cols=".^5,.^95"]
|===
|image:it/twitter_logo_blue2.png[35,35,vertical-align="top"]|Twitter : http://twitter.com/cmoulliard
|image:it/linkedin.png[35,35]|LinkedIn : http://www.linkedin.com/in/charlesmoulliard
|image:it/github.jpg[35,35]|Blog : http://cmoulliard.github.io
|image:it/slideshare.png[35,35]|Slideshare : http://www.slideshare.net/cmoulliard
|===


+++<aside class="notes">+++
Oh hey, these are some notes. They'll be hidden in your presentation, but you can see them if you open the speaker notes window (hit 's' on your keyboard).
+++</aside>+++

// *********************************
== Country where I live

|===
|image:belgium1.jpeg[] | image:atomium.jpeg[width="75%] |image:manneken.jpeg[]
|image:brussels.jpg[width="85%"]| image:brugge.jpg[width="85%",height="85%"] |
|===

// *********************************
== What you should know about Belgium

image::frits.jpeg[float="left"]
image::chocolate.jpeg[float="left"]
image::beers.jpeg[float="left"]
image::bande-dessinee.jpeg[float="left"]

// *********************************
== My Passion(s)

|===
| image:photography.jpeg[width="80%",height="80%"] | image:stumpjumper.jpeg[width="80%",height="80%"] |
| image:nature.jpeg[] | image:formula1.jpeg[] |
|===


// ************ INTRODUCTION ************
== Agenda

* *Introduction*
* Social Media Hype
* Use cases covered
* Integration & Camel
* Technology
* What JBoss Fuse can offer
* Conclusion

// *********************************
== Introduction

[cols="40,60"]
|===
| .2+| image:web2/concept.jpg[500,400,float="right"]
a| * Web 2.0 “Revolution”, User is an actor *collaborating* 
* Consequences :
** HTTPs requests image:web2/increase.png[350,350]
** Volume of **data exchanged** |
|===

// *********************************
== Introduction - con't

[cols="60,40"]
|===
| .2+| image:web2/html5.png[150, 150, float="right"]
image:web2/ajax1.png[150, 150, float="right"]
image:web2/ajax2.png[150, 150, float="right"]

a| * Technology Transformation
** **HTML5**
** **J**ava**S**cript / JSon / NoSQL
** **Push** +++&nbsp;<i class="fa fa-arrow-right"></i>&nbsp;+++ Ajax - WebSocket |
|===

image::web2/ajax.png[350, 350, float="left"]
image::web2/websocket.png[270, 270, float="left"]
image::web2/nosql.jpeg[220, 220, float="left"]


// ****** Social Media Hype  ********
== Agenda

* Introduction
* *Social Media Hype*
* Use cases covered
* Integration & Camel
* Technology
* What JBoss Fuse can offer
* Conclusion

// *********************************
== Social Media Hype

[cols="60,40"]
|===
| .2+| image:web2/Social-network.png[width="180",height="180", float="left"]
       image:web2/ilike.jpeg[width="180",height="180",float="left"]
       image:web2/Social-Media-Marketing.jpg[width="180",height="180",float="left"]

a|
* **Business - Companies**
** Marketing Strategy,
** Product Promotion,
** Launch or Campaign annoucement
** Seeking candidates
** ...

* Use Web2.0 but **Social Medias** |
|===

// *********************************
== Social Media Hype - con't

**Why** +++&nbsp;<i class="fa fa-question"></i>&nbsp;+++ To create **content** that **attracts** attention &
encourages readers to **share** it with their social networks

image::web2/Social-Media.jpg[width="400",height="300",float="left"]
image::web2/social-solutions.jpg[width="400",height="300",float="right"]

// ******** Use cases covered ********
== Agenda

* Introduction
* Social Media Hype
* *Use cases covered*
* Integration & Camel
* Technology
* What JBoss Fuse can offer
* Conclusion

// *********************************
== Use cases covered - demo1

* **Pattern** : Real Time & Broadcasting

[.newline]
* **Definition** : Collect data in real time from different providers (twitter, facebook, ...)
 and broadcast/multicast data to subscribed channels

[.newline]
* **Business** : Event, conference, meeting room

image::fuse/websocket.png[550,550,float="right"]

// *********************************
== Use cases covered - demo2

* **Pattern** : Collect Data Metrics/Statistics

[.newline]
* **Definition** : Retrieve data from Social Media and store them in order to query the data to
analyze the results

[.newline]
* **Business** : Measure performances of a campaign, product launch, analyze data to design marketing strategies

image::web2/google_analyt.jpeg[300,300,float="right"]

// *********************************
== Use cases covered - demo3

* **Pattern** : Business Activity Monitoring

[.newline]
* **Definition** : Monitor activities, operational days using reporting, dashboard tools.

[.newline]
* **Business** : Measure performances, rentability, return of investment

image::fuse/analyze-blog-content.jpg[float="right"]

// ********** INTEGRATION ********
== Agenda

* Introduction
* Social Media Hype
* Use cases covered
* *Integration & Camel*
* Technology
* What JBoss Fuse can offer
* Conclusion

// *********************************
== Integration

|===
| .2+|image:integration/hub.jpeg[width="95%",float="right"]
a| * Integration is +++&nbsp;<i class="fa fa-ellipsis-h"></i>&nbsp;+++ really hard

[.newline]
* +++&nbsp;<i class="fa fa-thumbs-down"></i>&nbsp;+++ protocols, standards, data formats, systems

[.newline]
* Long story since **C**ommon **O**bject **R**equest **B**roker **A**rchitecture
|===

// *********************************
== Integration - con't

|===
| .2+| image:integration/producer-consumer.png[]
a| * Concept
** +++<i class="fa fa-arrow-right"></i>+++ Decouple Producer from Consumer
+
** +++<i class="fa fa-arrow-right"></i>+++ Message transport information |
|===

// *********************************
== Integration - con't

|===
| .2+| image:integration/bus.png[width="95%",float="right"]
a|
[.newline]
* +++&nbsp;<i class="fa fa-wrench"></i>&nbsp;+++ Layer to transport messages : BUS

[.newline]
* +++&nbsp;<i class="fa fa fa-cog fa-spin"></i>&nbsp;+++  ESB, JBI, SCA

image::integration/jbi.jpeg[width="95%",float="right"] |
|===

// *********************************
== Integration - con't

image::camel/camel-box-small.png[width="100%",float="right"]

* OpenSource Java **Integration** Framework

[.newline]
* Designed around : **D**omain **S**pecific **L**anguage

[.newline]
* Implement **E**nterprise **I**ntegration **P**atterns

image::eip/book.jpg[width="45%",float="right"]

// *********************************
//[data-background="white"]
== Camel

* http://camel.apache.org/enterprise-integration-patterns.html[> 50 patterns] implemented
* and more : Loadbalancer, Throttler, Delayer, ...

image::eip/patterns.png[width="100%",float="left"]

image::eip/patterns-3.jpg[width="120%",float="left"]

// *********************************
== Camel - con't

[cols="35,65"]
|===
| .2+|image:camel/factory.png[]
a| * Key features
** Component
** Endpoint
** Consumer
** Producer|
|===

// *********************************
== Camel - con't

* Key features : route, processor

image:camel/pipeline.png[]

// *********************************
== Camel - con't

* Interceptor : trace, log, capture business events

[.newline]
image:camel/pipeline2.png[]

// *********************************
== Camel - con't

[cols="45,65"]
|===
| .2+|image:camel/camel-features.png[]
a| * Container for the routes +++&nbsp;<i class="fa fa-arrow-right"></i>&nbsp;+++ CamelContext |
|===

// *********************************
== Camel - con't

[cols="45,65"]
|===
| .2+|image:camel/camel-features2.png[]
a| * Cross communication not allowed using direct, seda |
|===

// *********************************
== Camel - con't

[cols="45,65"]
|===
| .2+|image:camel/camel-features3.png[]
a| * But possible Using BUS like NMR, Broker, Shared Component with direct-vm, vm |
|===


// *********************************
== Camel - con't

[cols="65,35"]
|===
| .2+|image:camel/type-converter.png[]
a|* **Type Converter** Strategy
* Allow to **convert** the body payloads from one type to another
* To and From these types
** File
** String
** byte[] and ByteBuffer
** InputStream and OutputStream
** Reader and Writer|
|===

// *********************************
== Camel - con't

* **Data Transformation** for complex use case

[source, java]
----
include::{sourcesdir}/org/devnation/camel/DataFormat.java[]
----

* **Marshalling** : Object +++<i class="fa fa-arrow-right"></i>+++ XML (JAXB)
* **Unmarshalling** : XML +++<i class="fa fa-arrow-right"></i>+++ Object (JAXB)

// *********************************
== Camel - con't

* http://camel.apache.org/dataformat.html[> 20 Data Format]

image::camel/dataformat-2.png[]


// *********************************
== Camel - con't

image::camel/inonly.png[width="65%"]

// *********************************
== Camel - con't

image::camel/inout.png[width="75%"]

// *********************************
== Camel - con't

* Fluent API

[source,java]
----
include::{sourcesdir}/org/devnation/camel/ExampleRouteBuilder.java[]
----

// *********************************
== Camel - con't

* Alternative : Spring, Blueprint DSL

[source,xml]
----
include::{resourcesdir}/META-INF/org/devnation/camel/example.xml[]
----

// *********************************
== Camel - con't

* In memory bus / alternative to JBI, SCA, NMR
* Transport objects : XML, File, Stream, Bytes
* Predicate & Expression language (xslt, xpath, ...)
* Sync/Async exchanges
* Threads Management,
* Tx Architecture
* Error and exception handling
* Policy driven
* Container agnostic

// *********************************
== http://camel.apache.org/components.html[Camel - con't]

image::camel/components.png[width="85%"]

// ******* ********
== Agenda

* Introduction
* Social Media Hype
* Use cases covered
* Integration & Camel
* *Technology*
* What JBoss Fuse can offer
* Conclusion

// *********************************
== Technology - Camel

image::social-components.png[width="75%",height="75%"]

combined with

* camel-gmail
* camel-dropbox
* camel-ajax, camel-websocket,
* camel-sql, camel-jdbc, ...
* camel-elasticsearch

// *********************************
== Technology - Common

**O**pen standard for **Auth**orization

OAuth image:web2/oauth-2.png[75,75]

image::web2/oauth.gif[width="40%",height="40%",float="center"]

// *********************************
== Technology - Camel

* Component : FaceBook

- Info : http://camel.apache.org/facebook.html
- Grant Access :  https://developers.facebook.com/apps
- API : http://facebook4j.org/en/index.html

[source, java]
----
include::{sourcesdir}/org/devnation/camel/FacebookExample.java[tag=snippetRoute]
----

// *********************************
== Technology - Camel

- OAuth

[source, java]
----
include::{sourcesdir}/org/devnation/camel/FacebookExample.java[tag=snippetOAuth]
----

- Externalize tokens http://camel.apache.org/using-propertyplaceholder.html[parameters] with Property PlaceHolder

[source, java]
----
include::{resourcesdir}/META-INF/org/devnation/camel/credentials.properties[]
----

// *********************************
== Technology - Camel

Example :

- To create a post within your Facebook profile

- Send a facebook4j.PostUpdate body to a camel facebook producer

[source, java]
----
include::{sourcesdir}/org/devnation/camel/FacebookExample.java[tag=snippetRouteP]
----

// *********************************
== Technology - Camel

* Component Twitter

- Info : http://camel.apache.org/twitter.html
- Grant Access :  https://dev.twitter.com/apps/new
- API : http://twitter4j.org/en/index.html

Example
[source, java]
----
include::{sourcesdir}/org/devnation/camel/TwitterExample.java[tag=snippetRoute]
----

// *********************************
== Technology - Camel

OAuth

[source, java]
----
include::{sourcesdir}/org/devnation/camel/TwitterExample.java[tag=snippetOAuth]
----

Advanced Query

https://support.twitter.com/articles/71577-using-advanced-search

// *********************************
== Technology - Camel

[.newline]
Simple Example to post a tweet

[source, java]
----
include::{sourcesdir}/org/devnation/camel/TwitterExample.java[tag=snippetRouteP]
----

// *********************************
== Technology - Camel

- Object / JSON
- Use utility like Google JSON API
- Marshall/Unmmarshall https://camel.apache.org/json.html[JSON]

// *********************************
== Twitter - con't

BAD - +++&nbsp;<i class="fa fa-frown-o"></i>&nbsp;+++

[source, java]
----
String data = "{ " +
    " \"" + "timestamp" + "\" : \"" + formatDate(generateTimeStamp()) + "\"," +
    " \"" + "createdAt" + "\" : \"" + status.getCreatedAt().toString() + "\"," +
    " \"" + "id" + "\" : \"" + status.getId() + "\"," +
    " \"" + "text" + "\" : \"" + status.getText() + '\'' + "\"," +
    " \"" + "isFavorited" + "\" : \"" + status.isFavorited() + "\"," +
    " \"" + "isRetweeted" + "\" : \"" + status.isRetweeted() + "\"," +
    " \"" + "favoriteCount" + "\" : \"" + status.getFavoriteCount() + "\"," +
    " \"" + "inReplyToScreenName" + "\" : \"" + status.getInReplyToScreenName() + '\'' + "\"," +
    " \"" + "geoLocation" + "\" : \"" + status.getGeoLocation() + "\"," +
    " \"" + "place" + "\" : \"" + status.getPlace() + "\"," +
    " \"" + "retweetCount" + "\" : \"" + status.getRetweetCount() + "\"," +
    " \"" + "isoLanguageCode" + "\" : \"" + status.getIsoLanguageCode() + "\"," +
    " \"" + "user" + "\" : \"" + status.getUser().getName() + "\"," +
    " \"" + "country" + "\" : \"" + country + "\"" +
    " }";
----

// *********************************
== Technology - con't

BETTER - +++&nbsp;<i class="fa fa-smile-o"></i>&nbsp;+++

[source, java]
----
  private void init(JSONObject json) throws TwitterException {
  	id = getLong("id", json);
  	source = getUnescapedString("source", json);
  	createdAt = getDate("created_at", json);
  	isTruncated = getBoolean("truncated", json);
  	inReplyToStatusId = getLong("in_reply_to_status_id", json);
  	inReplyToUserId = getLong("in_reply_to_user_id", json);
  	isFavorited = getBoolean("favorited", json);
----

// *********************************
== Technology - Camel

[cols="30,35,35"]
|===
.3+| Routing engine Camel & EIP Patterns like +++&nbsp;<i class="fa fa-arrow-right"></i>&nbsp;+++
a| http://camel.apache.org/aggregator2.html[Aggregator]

image::eip/aggregator.png[150,150]

http://camel.apache.org/splitter.html[Splitter]

image::eip/splitter.png[150,150] |

http://camel.apache.org/transform.html[Transform]

image:eip/transform.png[150,150]

http://camel.apache.org/multicast.html[Multicast]

image:eip/multicast.png[150,150] |
|===

// *********************************
== Technology - Real Time

|===
| .2+|image:web2/websocket.png[width="55%"]
a| * **Websocket** +
** **Full-duplex** single +
   socket connection
** HTTP request followed +
   by WebSocket data +
   Packets exchange +
** **ws://** and **wss://** protocol +
** Part of HTML5 initiative +
** Specification **rfc-6455** (Dec-2011) managed by IETF |
|===

// *********************************
== Technology - Real Time - DEMO1

* Integrated within ActiveMQ & Camel

[.center]
image::fuse/camel-websocket.png[550,550]

* More info : http://goo.gl/14Ysbi[Develop Real Time HTML5 applications using WebSocket with Apache Camel & ActiveMQ - CamelOne 2012]

// *********************************
== Technology - Data Metrics

|===
| image:fuse/elasticsearch1.png[]
image:fuse/lucene_logo.png[]
image:fuse/nosql.jpeg[]
a| * Kibana & ElasticSearch +++&nbsp;<i class="fa fa-arrow-right"></i>&nbsp;+++ Insight Technology
* Collect Logs, Camel metrics ...
|===

// *********************************
== Technology - Data Metrics

image::fuse/elasticsearch2.png[400,600]

// *********************************
== Use cases covered - Data Metrics

image::fuse/elasticsearch.png[]

// *********************************
== Technology - Data Metrics

* Create a bean recuperating **Message/Exchange** using @Header, @Body
* Store it using **org.fusesource.insight.storage.StorageService**

[source, java]
----
include::{sourcesdir}/org/devnation/camel/StoreService.java[tag=snippetService]
----

// *********************************
== Technology - Data Metrics

* Inject Storage service

[source,xml]
----
include::{resourcesdir}/OSGI-INF/blueprint/blueprint.xml[]
----

// *********************************
== Technology - Data Metrics

* Call it from your Camel route

[source, java]
----
  from("twitter://search?type=polling&delay=" + delay
          + "&useSSL=true&keywords=" + keywords
          + "&" + getUriTokens())
          .routeId("Tweet-Store-WS")
          .delay(5000)

          // We receive the Twitter4J Status that we will use
          // to extract info text, isfavorited, is Retweeted, geolocation, isoLanguageCode, contributors
          // and create A JSON message used later on to store it in ES
          .setHeader("tweet-full").method(Service.class, "getJSONTweet")

          // Message is stored using insight in ElasticSearch
          .bean(Service.class, "store")
----

// *********************************
== Technology - Data Metrics - DEMO2

image::fuse/eshead.png[]

// *********************************
== Technology - Dashboard

image:fuse/hawtio-logo.png[80,80] Hawtio

* Lightweight & **modular** HTML5 **web console** with **plugins** for managing Java **MBeans**
* Javascript / **REST** front end +++&nbsp;<i class="fa fa-arrow-right"></i>&nbsp;+++ **jolokia** JMX translator

image:web2/html5.jpeg[100,100] +++&nbsp;<i class="fa fa-plus"></i>&nbsp;+++
image:web2/javascript.jpeg[100,100] +++&nbsp;<i class="fa fa-plus"></i>&nbsp;+++
image:fuse/jolokia.png[150,150]

* Heart of the **new** **F**use **M**anagement **C**onsole

// *********************************
== Technology - Dashboard

* Extend Hawtio Dashboard

image::fuse/dashboard-trends.png[]

// *********************************
== Technology - Dashboard

* Declare MBean Interface

[source, java]
----
include::{sourcesdir}/org/devnation/camel/SocialMediaMBean.java[tag=snippetInterface]
----

// *********************************
== Technology - Dashboard

* Service Implementation & MBean registration

[source, java]
----
include::{sourcesdir}/org/devnation/camel/SocialMedia.java[tag=snippetService]
----

// *********************************
== Technology - Dashboard - DEMO3

* Inject Service & init beans

[source, java]
----
include::{resourcesdir}/OSGI-INF/blueprint/blueprint1.xml[]
----

// *********************************
== Technology - Plugin

* Create your own hawtio plugin
* Web project (war, bundle)
* Require to register **io.hawt.web.plugin.HawtioPlugin** with parameters
** Context
** JS Scripts location
** Name and domain (used by controller)

// *********************************
== Technology - Plugin

[source, xml]
----
include::{resourcesdir}/OSGI-INF/blueprint/blueprint2.xml[]
----

// *********************************
== Technology - Plugin

[cols="60,40"]
|===
a| * Design Front end (AngularJS)
* Send REST request to call Service |
image:web2/angularjs.jpeg[80,80,float="right"]
|===

[source, javascript]
----
include::{resourcesdir}/socialPlugin.js[tag=snippetController]
----

// *********************************
== Technology - Plugin

[source, xml]
----
include::{resourcesdir}/searchtweets.html[]
----

// *********************************
== Technology - Plugin - DEMO3

image::fuse/plugin-query.png[]

// ****** What JBoss Fuse can offer ********
== Agenda

* Introduction
* Social Media Hype
* Use cases covered
* Integration & Camel
* Technology
* *What JBoss Fuse can offer*
* Conclusion

// *********************************
== What JBoss Fuse can offer

image::fuse/basics-1.png[]

image::fuse/fuse.jpg[150,150,float="right"]

// *********************************
== What JBoss Fuse can offer - con't

image::fuse/basics-2.png[]

image::fuse/fuse.jpg[150,150,float="right"]

// *********************************
== What JBoss Fuse can offer - con't

image::fuse/advances-1.png[]

image::fuse/fuse.jpg[150,150,float="right"]

// *********************************
== Technology - con't

image::fuse/advances-2.png[]

image::fuse/fuse.jpg[150,150,float="right"]

// ******** Conclusion ********
== Agenda

* Introduction
* Social Media Hype
* Integration & Camel
* Use cases covered
* Technology
* What JBoss Fuse can offer
* *Conclusion*

// *********************************
== Conclusion

[.newline]
* Fuse Technology ready +++&nbsp;<i class="fa fa-arrow-right"></i>&nbsp;+++ design **Social Media** Projects

[.newline]
* To **cover** use cases +++&nbsp;<i class="fa fa-arrow-right"></i>&nbsp;+++
** Real Time,
** Data collection,
** Fuse Analytics,
** BAM
** ...

// *********************************
== Questions

[cols="35,.<65"]
|===

.2+|image:questions.png[width="95%"]
a|* Twitter : http://twitter.com/cmoulliard[@cmoulliard]
a|* More info : http://camel.apache.org[Apache Camel], http://hawt.io[Hawtio], http://fabric8.io[fabric8]
|===

* Code of demos :
  {demo-git}

