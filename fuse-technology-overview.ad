:allow-uri-read:
:author: Charles Moulliard
:backend: revealjs
:blog: http://cmoulliard.github.io
:data-uri!:
:demo-git: https://github.com/cmoulliard/devnation-2014-demos
:fa-ellipsis: #&nbsp;#[fa fa-ellipsis-h]#&nbsp;#
//:footer_copyright: Powered by http://asciidoctor.org[Asciidoctor], RevealJS and Hyla
:footer_copyright: Powered by Asciidoctor, Hyla & RevealJS
:icons: font
:idprefix:
:imagesdir: images/
:linkattrs:
:linkcss:
:project_dir: /Users/chmoulli/MyProjects/conferences/fuse-days-paris-2014
:resourcesdir: /Users/chmoulli/MyProjects/conferences/fuse-days-paris-2014/snippet/src/main/resources
// Themes : default, beige, moon, blood, night, serif, simple, sky, solarized
:revealjs_theme: conference
:revealjs_vertical_alignment: false
:revealjs_history: true
:sourcesdir: /Users/chmoulli/MyProjects/conferences/devnation-2014-slideshow/snippet/src/main/java/
:source-highlighter: highlightjs
//:source-highlighter: coderay, highlightjs, pygments
:stylesdir: /Users/chmoulli/RedHat/GPE/content/hyla/resources/styles
:title-author: {title} {author}
:title-speaker: Architect Engineer Committer
:twitter: cmoulliard

== *Fuse Technology Overview*

Fuse Integration Days / 13th of May - 2014

[.newline]
http://twitter.com/{twitter}[{author}] +
Architect, Engineer & Committer

// ************ AGENDA ************
== Agenda

* *Projects timeline*
* Fuse overview
* High level presentation
* Architectures design
* Demos

// ************** Projects timeline ********

== Projects timeline

* A few things about Fuse & OpenSource

image::fuse/HistoryOfFuse.png[]

// ************ AGENDA ************
== Agenda

* Projects timeline
* *Fuse overview*
* High level presentation
* Architectures design
* Demos

// ************** Fuse overview ************

== JBoss Fuse

* 2 products +++<i class="fa fa-arrow-right"></i>+++ JBoss Fuse & AMQ
* Designed around Multi-Technology OSGI Container
* Packaging of Open Sources projects :
  - Camel,
  - Cxf,
  - ActiveMQ,
  - Fabric8,
  - Hawtio

// ************** Fuse overview ************

== Fuse overview

image::fuse/jboss-fuse.png[width="80%",height="80%"]

// ************** Fuse overview ************

== Fuse overview

image::fuse/jboss-amq.png[width="80%",height="80%"]

// ************** Fuse overview ************

== Fuse overview - con't

image::fuse/basic-1.png[]

image::fuse/fuse.jpg[150,150,float="right"]

// *********************************
== Fuse overview - con't

image::fuse/basic-2.png[]

image::fuse/fuse.jpg[150,150,float="right"]

// *********************************
== Fuse overview - con't

image::fuse/basic-3.png[]

image::fuse/fuse.jpg[150,150,float="right"]

// *********************************
== Fuse overview - con't

image::fuse/advanced-1.png[]

image::fuse/fuse.jpg[150,150,float="right"]

// *********************************
== Technology - con't

image::fuse/advanced-2.png[]

image::fuse/fuse.jpg[150,150,float="right"]


// ************** High Level ***************

== Integration

|===
| .2+|image:integration/hub.jpeg[width="95%",float="right"]
a| * Integration is +++&nbsp;<i class="fa fa-ellipsis-h"></i>&nbsp;+++ really hard

[.newline]
* +++&nbsp;<i class="fa fa-thumbs-down"></i>&nbsp;+++ protocols, standards, data formats, systems

[.newline]
* Long story since **C**ommon **O**bject **R**equest **B**roker **A**rchitecture
|===

// *********************************
== Integration - con't

|===
| .2+| image:integration/producer-consumer.png[]
a| * Concept
** +++<i class="fa fa-arrow-right"></i>+++ Decouple Producer from Consumer
+
** +++<i class="fa fa-arrow-right"></i>+++ Message transport information |
|===

// *********************************
== Integration - con't

|===
| .2+| image:integration/bus.png[width="95%",float="right"]
a|
[.newline]
* +++&nbsp;<i class="fa fa-wrench"></i>&nbsp;+++ Layer to transport messages : BUS

[.newline]
* +++&nbsp;<i class="fa fa fa-cog fa-spin"></i>&nbsp;+++  ESB, JBI, SCA

image::integration/jbi.jpeg[width="95%",float="right"] |
|===

// ************** Camel ************
== Camel

image::camel/camel-box-small.png[width="100%",float="right"]

* OpenSource Java **Integration** Framework

[.newline]
* Designed around : **D**omain **S**pecific **L**anguage

[.newline]
* Implement **E**nterprise **I**ntegration **P**atterns

image::eip/book.jpg[width="45%",float="right"]

// ************** Camel ************
//[data-background="white"]
== Camel - con't

* http://camel.apache.org/enterprise-integration-patterns.html[> 50 patterns] implemented
* and more : Loadbalancer, Throttler, Delayer, ...

image::eip/patterns.png[width="100%",float="left"]

image::eip/patterns-3.jpg[width="120%",float="left"]

// ************** Camel ************
== Camel - con't

[cols="35,65"]
|===
| .2+|image:camel/factory.png[]
a| * Key features
** Component
** Endpoint
** Consumer
** Producer|
|===

// ************** Camel ************
== Camel - con't

* Key features : route, processor

image:camel/pipeline.png[]

// ************** Camel ************
== Camel - con't

* Interceptor : trace, log, capture business events

[.newline]
image:camel/pipeline2.png[]

// ************** Camel ************
== Camel - con't

[cols="45,65"]
|===
| .2+|image:camel/camel-features.png[]
a| * Container for the routes +++&nbsp;<i class="fa fa-arrow-right"></i>&nbsp;+++ CamelContext |
|===

// ************** Camel ************
== Camel - con't

[cols="45,65"]
|===
| .2+|image:camel/camel-features2.png[]
a| * Cross communication not allowed using direct, seda |
|===

// ************** Camel ************
== Camel - con't

[cols="45,65"]
|===
| .2+|image:camel/camel-features3.png[]
a| * But possible Using BUS like NMR, Broker, Shared Component with direct-vm, vm |
|===


// ************** Camel ************
== Camel - con't

[cols="65,35"]
|===
| .2+|image:camel/type-converter.png[]
a|* **Type Converter** Strategy
* Allow to **convert** the body payloads from one type to another
* To and From these types
** File
** String
** byte[] and ByteBuffer
** InputStream and OutputStream
** Reader and Writer|
|===

// ************** Camel ************
== Camel - con't

* **Data Transformation** for complex use case

[source, java]
----
include::{sourcesdir}/org/devnation/camel/DataFormat.java[]
----

* **Marshalling** : Object +++<i class="fa fa-arrow-right"></i>+++ XML (JAXB)
* **Unmarshalling** : XML +++<i class="fa fa-arrow-right"></i>+++ Object (JAXB)

// ************** Camel ************
== Camel - con't

* http://camel.apache.org/dataformat.html[> 20 Data Format]

image::camel/dataformat-2.png[]


// ************** Camel ************
== Camel - con't

image::camel/inonly.png[width="65%"]

// ************** Camel ************
== Camel - con't

image::camel/inout.png[width="75%"]

// ************** Camel ************
== Camel - con't

* Fluent API

[source,java]
----
include::{sourcesdir}/org/devnation/camel/ExampleRouteBuilder.java[]
----

// ************** Camel ************
== Camel - con't

* Alternative : Spring, Blueprint DSL

[source,xml]
----
include::{resourcesdir}/META-INF/org/devnation/camel/example.xml[]
----

// ************** Camel ************
== Camel - con't

* In memory bus / alternative to JBI, SCA, NMR
* Transport objects : XML, File, Stream, Bytes
* Predicate & Expression language (xslt, xpath, ...)
* Sync/Async exchanges
* Threads Management,
* Tx Architecture
* Error and exception handling
* Policy driven
* Container agnostic

// ************** Camel ************
== http://camel.apache.org/components.html[Camel - con't]

image::camel/components.png[width="85%"]


// ************** Cxf ************

== Apache CXF


// ************** Karaf ************

== Apache Karaf image:integration/karaf-logo.png[float="right"]

* Java Micro-Container
* OSGI Runtime
* Offer 'modularity' for Services
* Multi-Technology platform

image::integration/ship-containers.png[]

// ************** Karaf ************

== Apache Karaf - con't

* SSH server
* Administration platform (local, remote, web, jmx)
* Provisioning system (features)
* Hot deployment and configuration management
* Instances management
* Security integration (JAAS)

// ************** Karaf ************

== Apache Karaf - con't

image:integration/karaf-runtime.png[]

* Technology +++&nbsp;<i class="fa fa-arrow-right"></i>&nbsp;+++ Camel, CXF, ActiveMQ, Spring, Fabric, ...
* Modular platform (deploy or remove container/libraries)

// ************** ActiveMQ ************

== Apache ActiveMQ

* High performance, reliable JMS messaging fabric
* Supporting JMS, C, C++, .Net, Stomp clients

image:activemq/broker-architecture.png[]

// ************** ActiveMQ ************

== Apache ActiveMQ - con't

* Point to Point
 - Producer sends messages to a queue.
 - Consumer listens for messages from the queue
 - Messages are stored until read (or expired)
 - Messages can be persisted, are read only once.

image::activemq/point-to-point.png[]

// ************** ActiveMQ ************

== Apache ActiveMQ - con't

* Publish To Subscribe
  - A JMS client sends message to the topic.
  - JMS broker sends message to all subscribers that are currently alive.
  - Messages are consumed x times (relation 1 to many)

image::activemq/publish-subscribe.png[]

// ************** Fabric ************

== Fabric8

* Opensource integration project : http://fabric8.io/
* Goals :
   - Configuring, provisioning & running Fuse on any machines
physical, virtual, private, public, cloud ...
   - Virtualize services (endpoints), processes
   - Propose ElasticSearch Storage engine (insight)

// ************** Fabric ************

== Fabric8 - con't

[cols="50,50"]
|===
| .2+|image:fuse/fabric-3.png[]
a|* Karaf can create new instances (locally) & administrate them (locally or remotely)

+++&nbsp;<i class="fa fa-exclamation-triangle"></i>&nbsp;+++

* Instances are not “cloned”
* Configurations must be updated (manually)|
|===

// ************** Fabric ************

== Fabric8 - con't

* Fabric extend the possibilities

image:fuse/fabric-4.png[]

// ************** Fabric ************

== Fabric8 - con't

* Management rely on +++&nbsp;<i class="fa fa-arrow-right"></i>&nbsp;+++
Zookeeper server (ensemble of 1,3, 5 or servers) +++&nbsp;<i class="fa fa-cloud"></i>&nbsp;+++

image:fuse/fabric-1.png[]

// ************** Fabric ************

== Fabric8 - con't

& Fabric Agents

image:fuse/fabric-2.png[]

* They will communicate with Zk server to :

+++&nbsp;<i class="fa fa-arrow-left"></i>&nbsp;+++ register container info (ports, services, endpoints, processes)

+++&nbsp;<i class="fa fa-arrow-right"></i>&nbsp;+++ get their provisioning

// ************** Fabric ************

== Fabric8 - con't

* Provisioning = Behavior of a container, achieved with 'Profiles'
* Enveloppe(s) containing artifacts to be deployed or parameters to be configured
* Can be versioned, facilitate mngt - rollback

image::fuse/fabric-5.png[width="80%",height="80%"]

// ************** Fabric ************

== Fabric8 - con't

* Virtualization +++&nbsp;<i class="fa fa-arrow-right"></i>&nbsp;+++ Create “indirection” points
* Load balancing and failover
* Easy elastic scaling of services
* High-availability, Replication

// ************** Fabric ************

== Fabric8 - con't

image::fuse/fabric-camel.png[]

// ************** Fabric ************

== Fabric8 - con't

image::fuse/fabric-activemq.png[]

// ************ Hawtio *************

== Hawtio

[cols="85,15"]
|===
| .2+|image:fuse/hawtio-logo-bigger.png[,float="right"]
a|* Lightweight & **modular** HTML5 **web console** with **plugins** for managing Java **MBeans**
* Javascript / **REST** front end +++&nbsp;<i class="fa fa-arrow-right"></i>&nbsp;+++ **jolokia** JMX translator
* Heart of the **new** **F**use **M**anagement **C**onsole
image:web2/html5.jpeg[100,100] +++&nbsp;<i class="fa fa-plus"></i>&nbsp;+++
image:web2/javascript.jpeg[100,100] +++&nbsp;<i class="fa fa-plus"></i>&nbsp;+++
image:fuse/jolokia.png[150,150]|
|===

// ************ Hawtio *************

== Hawtio - con't

* Extend the dashboard & plugins

* TODO

// ************ Hawtio *************

== Hawtio - con't

image:fuse/hawtio-1.png[]

// ************ Hawtio *************

== Hawtio - con't

image:fuse/hawtio-2.png[]

// ************ Hawtio *************

== Hawtio - con't

image:fuse/hawtio-3.png[]

// ************ Hawtio *************

== Hawtio - con't

image:fuse/hawtio-4.png[width="65%",height="65%"]
image:fuse/hawtio-5.png[width="65%",height="65%"]

// ************* Architecture design *******

== Messaging

// ************* Architecture design *******

== Java using PoJo / Beans

// ************* Architecture design *******

== Combine Java & Messaging

// ************* Architecture design *******

== Combine Java & Messaging & Web


// ************ AGENDA ************
== Agenda

* *Projects timeline*
* Fuse overview
* High level presentation
* Architectures design
* *Demos*

// ************* DEMOS *******

== Demos

 * Apache Camel & WebServices
 * Apache Karaf - POJO + Messaging + Web
 * Apache ActiveMQ - High Availability with Network of Brokers
 * Fabric8 - Virtualization of Camel endpoints / loadbalancing

// *********************************
== Questions

[cols="35,.<65"]
|===

.2+|image:questions.png[width="95%"]
a|* Twitter : http://twitter.com/cmoulliard[@cmoulliard]
a|* More info : http://camel.apache.org[Apache Camel], http://hawt.io[Hawtio], http://fabric8.io[fabric8]
|===

* Code of demos :
  {demo-git}

